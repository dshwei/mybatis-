springboot 整合没mybatis 逆向工程


1,pom中添加依赖
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
2，  在build 标签中添加逆向生成的插件：

    <build>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <version>1.3.2</version>
                    <dependencies>
                        <dependency>
                            <groupId> mysql</groupId>
                            <artifactId> mysql-connector-java</artifactId>
                            <version>8.0.13</version>
                        </dependency>
                        <dependency>
                            <groupId>org.mybatis.generator</groupId>
                            <artifactId>mybatis-generator-core</artifactId>
                            <version>1.3.2</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>Generate MyBatis Artifacts</id>
                            <phase>package</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!--允许移动生成的文件 -->
                        <verbose>true</verbose>
                        <!-- 是否覆盖 -->
                        <overwrite>false</overwrite>
                        <!-- 自动生成的配置，配置文件名称和路径位置 -->
                        <configurationFile>
                            src/main/resources/mybatis-generator.xml</configurationFile>
                    </configuration>
                </plugin>

            </plugins>

        </build>
3，在resources 目录下面创建xml文件
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE generatorConfiguration
                PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
                "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

        <generatorConfiguration>

            <properties resource="application.yml" />
            <!-- mysql驱动的位置 这个是MySQL连接的jar包，你需要指定你自己计算机上的jar包的位置-->
            <classPathEntry location="D:\MVN_repositories\mysql\mysql-connector-java\8.0.13\mysql-connector-java-8.0.13.jar" />

            <context id="Tables" targetRuntime="MyBatis3">

                <!-- 注释 -->
                <commentGenerator>
                    <!-- 是否生成注释代时间戳 -->
                    <property name="suppressDate" value="true"/>
                    <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
                    <property name="suppressAllComments" value="true"/>
                </commentGenerator>

                <!-- JDBC连接 其中connectionURL后面的newtest改为你创建的数据库，紧跟在后面是数据库连接的账户和密码-->
                <jdbcConnection
                        driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://172.28.19.29:3306/tencent_monitor"
                        userId="root"
                        password="Vxi@2016">
                </jdbcConnection>

                <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
                <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
                 NUMERIC 类型解析为java.math.BigDecimal -->
                <javaTypeResolver>
                    <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
                    <property name="forceBigDecimals" value="false" />
                </javaTypeResolver>

                <!-- 生成实体类地址 这里需要你改动，其中targetPackage需要根据你自己创建的目录进行改动 -->
                <javaModelGenerator targetPackage="com.vxichina.mscreen.persistence.sql.model" targetProject="src/main/java">
                    <!-- 从数据库返回的值被清理前后的空格 -->
                    <property name="trimStrings" value="true" />
                    <!-- enableSubPackages:是否让schema作为包的后缀 -->
                    <property name="enableSubPackages" value="false" />
                </javaModelGenerator>

                <!-- 生成mapper xml文件 这里不需要改动 -->
                <sqlMapGenerator targetPackage="mapper/mysql/"  targetProject="src/main/resources">
                    <!-- enableSubPackages:是否让schema作为包的后缀 -->
                    <property name="enableSubPackages" value="false" />
                </sqlMapGenerator>

                <!-- 生成mapper xml对应Client   这里需要改动targetPackage，依据你自己的工程-->
                <javaClientGenerator targetPackage="com.vxichina.mscreen.persistence.sql.mapper" targetProject="src/main/java" type="XMLMAPPER">
                    <!-- enableSubPackages:是否让schema作为包的后缀 -->
                    <property name="enableSubPackages" value="false" />
                </javaClientGenerator>

                <!-- 配置表信息 -->
                <!-- schema即为数据库名, tableName为对应的数据库表, domainObjectName是要生成的实体类 ,
                enable*ByExample是否生成 example类 -->

                <table schema="tencent_monitor" tableName="com_agentteam"
                       domainObjectName="AgentTeam" enableCountByExample="true"
                       enableDeleteByExample="true" enableSelectByExample="true"
                       enableUpdateByExample="true">
                </table>
                <table schema="tencent_monitor" tableName="com_department"
                       domainObjectName="Department" enableCountByExample="true"
                       enableDeleteByExample="true" enableSelectByExample="true"
                       enableUpdateByExample="true">
                </table>

            </context>
        </generatorConfiguration>

4， 在run/debug configurations  添加 maven
   在 workdirectory中 指定当前某快的根目录
      commandline 中    添加命令  mybatis-generator:generate -e

5，执行mvn  命令生成Mapper,model，mapper.xml